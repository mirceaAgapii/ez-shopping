pipeline {
    agent any

    tools {
        maven "Maven 3.8.1"
    }

    environment {
      def dockerImage = null;
    }

    stages {
        stage("Read from Maven POM"){
            steps{
                script{
                    pom = readMavenPom file: 'backend/pom.xml'
                    projectArtifactId = pom.artifactId
                    projectVersion = pom.version
                }
                echo 'Building ${projectArtifactId}:${projectVersion}'
            }
        }
        stage("Test"){
            steps {
                sh 'mvn -version'
               // bat "mvn test"
            }
        }
        stage("Build JAR file"){
            steps{
                sh 'mvn install -f backend/pom.xml -Dmaven.test.skip=true'
            }
        }
        stage("Build docker image"){
            steps {
               echo "Building backend docker image "

               sh ('docker build -t backend -f backend/pipelines/Dockerfile .')
            }
        }
        stage("Build Angular app"){
            steps {
                  echo "Building angular docker image"
                 dir('frontend/') {
                    sh ('docker build -t frontend -f pipelines/Dockerfile .')
                }
            }
        }
        stage('DigitalOcean Login') {
           steps {
             sh ('echo docker login -u $DO_TOKEN -p $DO_TOKEN registry.digitalocean.com/ezshopping')
           }
        }
        stage("Pushing backend and frontend images to DigitalOcean"){
             steps {
                 echo "Pushing backend image to DigitalOcean container registry"
                 sh ('docker tag backend registry.digitalocean.com/ezshopping/backend')
                 sh ('docker push registry.digitalocean.com/ezshopping/backend')

                 echo "Pushing frontend image to DigitalOcean container registry"
                 sh ('docker tag frontend registry.digitalocean.com/ezshopping/frontend')
                sh ('docker push registry.digitalocean.com/ezshopping/frontend')
             }
        }
        stage('Deploy') {
            stages {
                stage('deploy apps') {
                    steps {
                        script {
                            sh('docker stop backend || true && docker rm backend || true')
                            sh('docker stop frontend || true && docker rm frontend || true')
                            sh('docker image rm registry.digitalocean.com/ezshopping/backend')
                            sh('docker image rm registry.digitalocean.com/ezshopping/frontend')
                            sh('docker pull registry.digitalocean.com/ezshopping/backend')
                            sh('docker pull registry.digitalocean.com/ezshopping/frontend')
                            sh ('docker run -e DB_HOST=$DB_HOST -e DB_PORT=$DB_PORT -e DB_DBNAME=$DB_DBNAME -e PSQL_DATASOURCE_USERNAME=$PSQL_DATASOURCE_USERNAME -e PSQL_DATASOURCE_PASSWORD=$PSQL_DATASOURCE_PASSWORD -e SECRET_ALGORITHM=$SECRET_ALGORITHM -d -p 8090:8090 --name backend -t registry.digitalocean.com/ezshopping/backend')
                            sh('docker run -d -p 4200:4200 --name frontend registry.digitalocean.com/ezshopping/frontend')
                        }
                    }
                }
            }
        }
    }
    post {
       failure {
           emailext body: 'Last build failed. Please check console output', subject: 'EzShopping - Build failed', to: 'ez.shopping.app@gmail.com'
       }
    }
}
