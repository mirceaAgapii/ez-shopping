pipeline {
    agent any

    tools {
        maven "Maven 3.8.1"
    }

    environment {
      def dockerImage = null;
    }

    stages {
        stage("Read from Maven POM"){
            steps{
                script{
                    pom = readMavenPom file: 'backend/pom.xml'
                    projectArtifactId = pom.artifactId
                    projectVersion = pom.version
                }
                echo 'Building ${projectArtifactId}:${projectVersion}'
            }
        }
        stage("Test"){
            steps {
                sh 'mvn -version'
               // bat "mvn test"
            }
        }
        stage("Build JAR file"){
            steps{
                sh 'mvn install -f backend/pom.xml -Dmaven.test.skip=true'
            }
        }
        stage("Build docker image"){
            steps {
               echo "Building backend docker image "

               sh 'docker build -t backend:v1.0 -f backend/pipelines/Dockerfile .'
            }
        }
         stage('DigitalOcean Login') {
           steps {
             sh 'echo docker login -u dop_v1_91f72860268a78226dc8be27ccc6b9e6322bb3b5e615a319f51d9887e4353c45 -p dop_v1_91f72860268a78226dc8be27ccc6b9e6322bb3b5e615a319f51d9887e4353c45 registry.digitalocean.com/ezshopping'
           }
         }
         stage("Pushing backend image to DigitalOcean"){
             steps {
                 echo "Pushing backend image to DigitalOcean container registry"
                 sh ('docker tag backend:v1.0 registry.digitalocean.com/ezshopping/backend')
                 sh 'docker push registry.digitalocean.com/ezshopping/backend'
             }
         }
        stage("Deploy"){
            steps{
                echo 'Server is fully up and running'

            }
        }
    }
    post {
        always {
            cleanWs()
            sh 'docker logout'
        }
    }
}